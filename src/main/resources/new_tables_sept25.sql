CREATE TABLE RXTYPE (
    RXTYPE_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    RXTYPE_SURGERY CHAR(1),
    RXTYPE_CHEMOTHERAPY CHAR(1),
    RXTYPE_RADIOTHERAPY CHAR(1),
    RXTYPE_IMMUNOTHERAPY CHAR(1),
    RXTYPE_HORMONALTHERAPY CHAR(1),
    RXTYPE_OTHERS CHAR(1),
    RXTYPE_NOTES VARCHAR2(255),
    RXTYPE_ENCODER NUMBER, -- Foreign key to USER table
    RXTYPE_CREATEDON TIMESTAMP, -- System time now
    RXTYPE_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_RXTYPE PRIMARY KEY (RXTYPE_ID),
    CONSTRAINT FK_PATIENT_RXTYPE FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_RXTYPE_ENCODER FOREIGN KEY (RXTYPE_ENCODER) REFERENCES USERTABLE(USER_ID)
);

CREATE TABLE SURGERY (
    SURGERY_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    SURGERY_OPERATION VARCHAR2(255) NOT NULL,
    SURGERY_DATE DATE NOT NULL,
    SURGERY_FINDINGS VARCHAR2(255) NOT NULL,
    SURGERY_INTENT VARCHAR2(255), -- Choices: Curative-complete, Curative-incomplete, Palliative only, Others
    SURGERY_SURGEON NUMBER NOT NULL, -- Foreign key to DOCTOR table
    SURGERY_HOSPITAL NUMBER NOT NULL, -- Foreign key to HOSPITAL table
    SURGERY_ENCODER NUMBER, -- Foreign key to USER table
    SURGERY_CREATEDON TIMESTAMP , -- System time
    SURGERY_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_SURGERY PRIMARY KEY (SURGERY_ID),
    CONSTRAINT FK_PATIENT_SURGERY FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_SURGERY_SURGEON FOREIGN KEY (SURGERY_SURGEON) REFERENCES DOCTOR(DOCTOR_ID),
    CONSTRAINT FK_SURGERY_HOSPITAL FOREIGN KEY (SURGERY_HOSPITAL) REFERENCES HOSPITAL(HOSPITAL_ID),
    CONSTRAINT FK_SURGERY_ENCODER FOREIGN KEY (SURGERY_ENCODER) REFERENCES USERTABLE(USER_ID)
);

CREATE TABLE CHEMOPROTOCOL (
    CHEMOPROTOCOL_ID NUMBER NOT NULL,
    CHEMODRUGS VARCHAR2(255) NOT NULL,
    CHEMODOSAGE NUMBER NOT NULL,
    CHEMONOCYCLE NUMBER NOT NULL,
    CHEMODILUENT VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_CHEMOPROTOCOL PRIMARY KEY (CHEMOPROTOCOL_ID)
);

CREATE TABLE TREATMENT (
    TREATMENT_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    TREATMENT_PRIMARYRXTYPE VARCHAR2(255) NOT NULL, -- Field options: RxType field names
    TREATMENT_PRIMARYRXNAME VARCHAR2(255) NOT NULL,
    TREATMENT_INITIALRXDATE DATE NOT NULL,
    TREATMENT_PURPOSE VARCHAR2(255) NOT NULL, -- Field options: Curative-complete, Curative-incomplete, Palliative only, Others
    TREATMENT_PLAN NUMBER NOT NULL, -- Foreign key to RXTYPE
    TREATMENT_ENCODER NUMBER, -- Foreign key to USER table (logged-in user)
    TREATMENT_CREATEDON TIMESTAMP, -- System time now
    TREATMENT_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_TREATMENT PRIMARY KEY (TREATMENT_ID),
    CONSTRAINT FK_PATIENT_TREATMENT FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_TREATMENT_PLAN FOREIGN KEY (TREATMENT_PLAN) REFERENCES RXTYPE(RXTYPE_ID),
    CONSTRAINT FK_TREATMENT_ENCODER FOREIGN KEY (TREATMENT_ENCODER) REFERENCES USERTABLE(USER_ID)
);

CREATE TABLE CHEMOTHERAPY (
    CHEMO_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    CHEMO_TYPE VARCHAR2(255) NOT NULL, -- Choices: neoadjuvant, adjuvant, palliative
    CHEMO_PROTOCOL NUMBER NOT NULL, -- Foreign key to CHEMOPROTOCOL table
    CHEMO_INITIALDATE DATE NOT NULL,
    CHEMO_ENDDATE DATE,
    CHEMO_CYCLENUMBERGIVEN NUMBER,
    CHEMO_STATUS VARCHAR2(255) NOT NULL, -- Choices: ongoing, completed, not completed
    CHEMO_NOTES VARCHAR2(255),
    CHEMO_ISCOMPLETED CHAR(1),
    CHEMO_FACILITY NUMBER NOT NULL, -- Foreign key to HOSPITAL table
    CHEMO_DOCTOR NUMBER NOT NULL, -- Foreign key to DOCTOR table
    CHEMO_ENCODER NUMBER, -- Foreign key to USER table
    CHEMO_CREATEDON TIMESTAMP, -- System time
    CHEMO_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_CHEMOTHERAPY PRIMARY KEY (CHEMO_ID),
    CONSTRAINT FK_PATIENT_CHEMO FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_CHEMO_PROTOCOL FOREIGN KEY (CHEMO_PROTOCOL) REFERENCES CHEMOPROTOCOL(CHEMOPROTOCOL_ID),
    CONSTRAINT FK_CHEMO_FACILITY FOREIGN KEY (CHEMO_FACILITY) REFERENCES HOSPITAL(HOSPITAL_ID),
    CONSTRAINT FK_CHEMO_DOCTOR FOREIGN KEY (CHEMO_DOCTOR) REFERENCES DOCTOR(DOCTOR_ID),
    CONSTRAINT FK_CHEMO_ENCODER FOREIGN KEY (CHEMO_ENCODER) REFERENCES USERTABLE(USER_ID)
);



CREATE TABLE IMMUNOTHERAPY (
    IMMUNORX_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    IMMUNORX_DRUG VARCHAR2(255) NOT NULL,
    IMMUNORX_INITIALDATE DATE NOT NULL,
    IMMUNORX_ENDDATE DATE,
    IMMUNORX_STATUS VARCHAR2(255) NOT NULL, -- Choices: ongoing, completed, not completed
    IMMUNORX_NOTES VARCHAR2(255),
    IMMUNORX_ISCOMPLETED CHAR(1),
    IMMUNORX_FACILITY NUMBER NOT NULL, -- Foreign key to HOSPITAL table
    IMMUNORX_DOCTOR NUMBER NOT NULL, -- Foreign key to DOCTOR table
    IMMUNORX_ENCODER NUMBER, -- Foreign key to USER table
    IMMUNORX_CREATEDON TIMESTAMP, -- System time
    IMMUNORX_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_IMMUNOTHERAPY PRIMARY KEY (IMMUNORX_ID),
    CONSTRAINT FK_PATIENT_IMMUNO FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_IMMUNO_FACILITY FOREIGN KEY (IMMUNORX_FACILITY) REFERENCES HOSPITAL(HOSPITAL_ID),
    CONSTRAINT FK_IMMUNO_DOCTOR FOREIGN KEY (IMMUNORX_DOCTOR) REFERENCES DOCTOR(DOCTOR_ID),
    CONSTRAINT FK_IMMUNO_ENCODER FOREIGN KEY (IMMUNORX_ENCODER) REFERENCES USERTABLE(USER_ID)
);

CREATE TABLE HORMONAL (
    HORMONAL_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    HORMONAL_DRUG VARCHAR2(255) NOT NULL,
    HORMONAL_DOSE NUMBER NOT NULL,
    HORMONAL_INITIALDATE DATE NOT NULL,
    HORMONAL_ENDDATE DATE,
    HORMONAL_STATUS VARCHAR2(255) NOT NULL, -- Choices: ongoing, completed, not completed
    HORMONAL_RX_NOTES VARCHAR2(255),
    HORMONAL_DOCTOR NUMBER NOT NULL, -- Foreign key to DOCTOR table
    HORMONAL_ENCODER NUMBER, -- Foreign key to USER table
    HORMONAL_CREATEDON TIMESTAMP , -- System time
    HORMONAL_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_HORMONAL PRIMARY KEY (HORMONAL_ID),
    CONSTRAINT FK_PATIENT_HORMONAL FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_HORMONAL_DOCTOR FOREIGN KEY (HORMONAL_DOCTOR) REFERENCES DOCTOR(DOCTOR_ID),
    CONSTRAINT FK_HORMONAL_ENCODER FOREIGN KEY (HORMONAL_ENCODER) REFERENCES USERTABLE(USER_ID)
);

CREATE TABLE RAD_DETAILS (
    RADDETAILS_ID NUMBER NOT NULL,
    RADDETAILS_PROCEDURE VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_RADDETAILS PRIMARY KEY (RADDETAILS_ID)
);

CREATE TABLE RADIOTHERAPY (
    RADRX_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER NOT NULL,
    RADRX_TYPE NUMBER NOT NULL, -- Foreign key to RAD_DETAILS table
    RADRX_INITIALDATE DATE NOT NULL,
    RADRX_LASTDATE DATE,
    RADRX_DOSE NUMBER NOT NULL,
    RADRX_BODYSITE VARCHAR2(255) NOT NULL,
    RADRX_STATUS VARCHAR2(255) NOT NULL, -- Choices: ongoing, completed, not completed
    RADRX_ISCOMPLETED CHAR(1) CHECK (RADRX_ISCOMPLETED IN ('Y', 'N')) NOT NULL,
    RADRX_FACILITY NUMBER, -- Foreign key to HOSPITAL table
    RADRX_DOCTOR NUMBER NOT NULL, -- Foreign key to DOCTOR table
    RADRX_ENCODER NUMBER, -- Foreign key to USER table
    RADRX_CREATEDON TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- System time
    RADRX_UPDATEDON TIMESTAMP,
    CONSTRAINT PK_RADIOTHERAPY PRIMARY KEY (RADRX_ID, PATIENT_ID),
    CONSTRAINT FK_PATIENT_RADRX FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_RADRX_TYPE FOREIGN KEY (RADRX_TYPE) REFERENCES RAD_DETAILS(RADDETAILS_ID),
    CONSTRAINT FK_RADRX_FACILITY FOREIGN KEY (RADRX_FACILITY) REFERENCES HOSPITAL(HOSPITAL_ID),
    CONSTRAINT FK_RADRX_DOCTOR FOREIGN KEY (RADRX_DOCTOR) REFERENCES DOCTOR(DOCTOR_ID),
    CONSTRAINT FK_RADRX_ENCODER FOREIGN KEY (RADRX_ENCODER) REFERENCES USERTABLE(USER_ID)
);


CREATE TABLE CONSULT (
    CONSULT_ID NUMBER NOT NULL,
    PATIENT_ID NUMBER, -- Foreign key to PATIENT table
    CONSULT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- System time
    CONSULT_SUBJECTIVE VARCHAR2(255) NOT NULL,
    CONSULT_OBJECTIVE VARCHAR2(255) NOT NULL,
    CONSULT_SURVWORKUP VARCHAR2(255) NOT NULL,
    CONSULT_RXPLAN VARCHAR2(255) NOT NULL,
    CONSULT_PATIENTSTATUS NUMBER NOT NULL, -- Foreign key to DISEASE_STATUS table
    CONSTRAINT PK_CONSULT PRIMARY KEY (CONSULT_ID),
    CONSTRAINT FK_PATIENT_CONSULT FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID),
    CONSTRAINT FK_CONSULT_STATUS FOREIGN KEY (CONSULT_PATIENTSTATUS) REFERENCES DISEASESTATUS(DXSTATUS_ID)
);
